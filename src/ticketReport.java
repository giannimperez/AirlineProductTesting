import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class ticketReport extends JInternalFrame {

  /** Creates new form ticketReport */
  public ticketReport() {
    initComponents();
    LoadData();
  }

  Connection con;
  PreparedStatement pst;

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  private void initComponents() {

    jScrollPane1 = new JScrollPane();
    jTable1 = new JTable();
    jButton1 = new JButton();

    jTable1.setModel(
        new DefaultTableModel(
            new Object[][] {},
            new String[] {
              "Ticket No", "Flight No", "Customer ID", "Class", "Price", "Seats", "Date"
            }));
    jScrollPane1.setViewportView(jTable1);

    jButton1.setText("Cancel");
    jButton1.addActionListener(this::jButton1ActionPerformed);

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addGroup(
                        layout
                            .createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(
                                        jScrollPane1,
                                        GroupLayout.PREFERRED_SIZE,
                                        509,
                                        GroupLayout.PREFERRED_SIZE))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addGap(226, 226, 226)
                                    .addComponent(
                                        jButton1,
                                        GroupLayout.PREFERRED_SIZE,
                                        155,
                                        GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(35, Short.MAX_VALUE)));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(
                        jScrollPane1, GroupLayout.PREFERRED_SIZE, 259, GroupLayout.PREFERRED_SIZE)
                    .addGap(35, 35, 35)
                    .addComponent(
                        jButton1, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)));
    pack();
  }

  private void jButton1ActionPerformed(ActionEvent evt) {
    // TODO add your handling code here:

    this.hide();
  }

  public void LoadData() {
    try {
      Class.forName("com.mysql.cj.jdbc.Driver");
      con = DriverManager.getConnection("jdbc:mysql://localhost/airline", "root", "password");
      pst = con.prepareStatement("SELECT * from ticket");
      ResultSet rs = pst.executeQuery();

      ResultSetMetaData rsm = rs.getMetaData();
      int c;
      c = rsm.getColumnCount();

      DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
      Df.setRowCount(0);

      while (rs.next()) {
        Vector<String> v2 = new Vector<>();

        for (int i = 1; i <= c; i++) {
          v2.add(rs.getString("id"));
          v2.add(rs.getString("flightID"));
          v2.add(rs.getString("customerID"));
          v2.add(rs.getString("class"));
          v2.add(rs.getString("price"));
          v2.add(rs.getString("seats"));
          v2.add(rs.getString("date"));
        }

        Df.addRow(v2);
      }

    } catch (ClassNotFoundException | SQLException ex) {
      Logger.getLogger(ticket.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  // Variables declaration - do not modify //
  private JButton jButton1;
  private JScrollPane jScrollPane1;
  private JTable jTable1;
  // End of variables declaration //
}
